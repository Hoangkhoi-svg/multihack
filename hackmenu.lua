-- KOIHXZ HUB - B·∫¢N FIX KH√îNG HI·ªÜN UI
_G.HeadSize = 50
_G.Disabled = true
local SavedSpeed, SavedJump = 16, 50
_G.ESPEnabled = true

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local TextChatService = game:GetService("TextChatService")
local UIS = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- FIX: ƒê·∫£m b·∫£o UI lu√¥n hi·ªÉn th·ªã
local Rayfield = nil
local Window = nil

-- H√†m t·∫£i Rayfield an to√†n
local function SafeLoadRayfield()
    local success, result = pcall(function()
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()
    end)
    
    if success then
        return result
    end
    
    -- Th·ª≠ URL d·ª± ph√≤ng
    success, result = pcall(function()
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua"))()
    end)
    
    return success and result or error("Kh√¥ng th·ªÉ t·∫£i Rayfield UI")
end

-- FIXED: H·ªá th·ªëng th√¥ng b√°o
local function SafeNotification(title, text, duration)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = duration or 5
        })
    end)
end

-- FIXED: C·∫≠p nh·∫≠t hitbox
local function updateHitbox(v)
    if v == player then return end
    
    local character = v.Character
    if not character then return end
    
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    
    pcall(function()
        hrp.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
        hrp.Transparency = 0.7
        hrp.BrickColor = BrickColor.new("Cyan")
        hrp.Material = Enum.Material.Neon
        hrp.CanCollide = false
    end)
end

-- FIXED: T·∫°o ESP
local function createESP(p)
    if p == player then return end
    
    local function attachESP(char)
        if not char then return end
        
        local head = char:FindFirstChild("Head")
        if not head then return end
        
        -- X√≥a ESP c≈© n·∫øu c√≥
        local existingESP = head:FindFirstChild("KOIHXZ_ESP")
        if existingESP then
            existingESP:Destroy()
        end
        
        local b = Instance.new("BillboardGui")
        b.Name = "KOIHXZ_ESP"
        b.Size = UDim2.new(0, 100, 0, 40)
        b.Adornee = head
        b.AlwaysOnTop = true
        b.Enabled = _G.ESPEnabled
        b.Parent = head
        
        local t = Instance.new("TextLabel")
        t.Size = UDim2.new(1, 0, 1, 0)
        t.BackgroundTransparency = 1
        t.Text = p.Name
        t.TextColor3 = Color3.new(0, 1, 0.5)
        t.TextStrokeColor3 = Color3.new(0, 0, 0)
        t.TextStrokeTransparency = 0.3
        t.TextScaled = true
        t.Font = Enum.Font.GothamBold
        t.Parent = b
    end
    
    if p.Character then
        attachESP(p.Character)
    end
    p.CharacterAdded:Connect(attachESP)
end

-- FIXED: Kh·ªüi t·∫°o UI
local function InitializeUI()
    -- ƒê·∫£m b·∫£o ch·ªâ t·∫°o UI m·ªôt l·∫ßn
    if Window then return end
    
    -- T·∫£i Rayfield
    Rayfield = SafeLoadRayfield()
    
    -- C·∫§U H√åNH M√ÄU XANH NEON
    Rayfield:SetConfiguration({
        Theme = {
            BackgroundColor = Color3.fromRGB(15, 15, 25),
            MainColor = Color3.fromRGB(0, 255, 150),
            AccentColor = Color3.fromRGB(0, 255, 150),
            FontColor = Color3.fromRGB(255, 255, 255),
        }
    })
    
    -- T·∫°o c·ª≠a s·ªï ch√≠nh
    Window = Rayfield:CreateWindow({
        Name = "KOIHXZ HUB FIXED",
        LoadingTitle = "UI ƒê√£ ƒê∆∞·ª£c Fix Th√†nh C√¥ng!",
        LoadingSubtitle = "Ch·ª©c nƒÉng ch√≠nh ho·∫°t ƒë·ªông 100%",
        ConfigurationSaving = { Enabled = false }
    })
    
    -- TAB CH√çNH
    local MainTab = Window:CreateTab("Trang Ch√≠nh", 6031094670)
    MainTab:CreateSection("Di Chuy·ªÉn")

    -- WALKSPEED/JUMPPOWER
    MainTab:CreateSlider({
        Name = "üö∂ T·ªëc ƒë·ªô",
        Range = {0, 300},
        Increment = 1,
        CurrentValue = SavedSpeed,
        Flag = "WalkSpeed",
        Callback = function(Value)
            SavedSpeed = Value
        end
    })

    MainTab:CreateSlider({
        Name = "üèÉ S·ª©c nh·∫£y",
        Range = {0, 200},
        Increment = 1,
        CurrentValue = SavedJump,
        Flag = "JumpPower",
        Callback = function(Value)
            SavedJump = Value
        end
    })

    -- INFINITE JUMP
    local infiniteJumpEnabled = false
    MainTab:CreateToggle({
        Name = "ü¶ò Nh·∫£y v√¥ h·∫°n",
        CurrentValue = infiniteJumpEnabled,
        Flag = "InfiniteJump",
        Callback = function(Value)
            infiniteJumpEnabled = Value
            _G.InfiniteJumpEnabled = Value
        end
    })

    -- TELEPORT
    local teleportEnabled = false
    MainTab:CreateToggle({
        Name = "üõ∞Ô∏è D·ªãch chuy·ªÉn ch·∫°m",
        CurrentValue = teleportEnabled,
        Flag = "ClickTP",
        Callback = function(Value)
            teleportEnabled = Value
        end
    })

    -- TAB HITBOX
    local HitboxTab = Window:CreateTab("Hitbox", 7733960981)
    HitboxTab:CreateSection("C√†i ƒë·∫∑t Hitbox")

    HitboxTab:CreateToggle({
        Name = "üî• B·∫≠t Hitbox",
        CurrentValue = _G.Disabled,
        Flag = "HitboxToggle",
        Callback = function(Value)
            _G.Disabled = Value
        end
    })

    HitboxTab:CreateSlider({
        Name = "üìè K√≠ch th∆∞·ªõc Hitbox",
        Range = {10, 100},
        Increment = 1,
        CurrentValue = _G.HeadSize,
        Flag = "HitboxSize",
        Callback = function(Value)
            _G.HeadSize = Value
        end
    })

    -- TAB ESP
    local VisualTab = Window:CreateTab("ESP", 6034567821)
    VisualTab:CreateSection("Hi·ªÉn th·ªã ng∆∞·ªùi ch∆°i")

    VisualTab:CreateToggle({
        Name = "üíØ Hi·ªÉn th·ªã t√™n",
        CurrentValue = _G.ESPEnabled,
        Flag = "ESPToggle",
        Callback = function(Value)
            _G.ESPEnabled = Value
            for _, p in pairs(Players:GetPlayers()) do
                if p.Character then
                    local head = p.Character:FindFirstChild("Head")
                    if head then
                        local esp = head:FindFirstChild("KOIHXZ_ESP")
                        if esp then
                            esp.Enabled = Value
                        end
                    end
                end
            end
        end
    })

    -- TAB SERVER
    local ServerTab = Window:CreateTab("M√°y Ch·ªß", 6004287365)
    ServerTab:CreateSection("Qu·∫£n l√Ω m√°y ch·ªß")

    ServerTab:CreateButton({
        Name = "üîÑ V√†o l·∫°i game",
        Callback = function()
            game:GetService("TeleportService"):Teleport(game.PlaceId, player)
        end
    })

    ServerTab:CreateButton({
        Name = "üåê ƒê·ªïi m√°y ch·ªß",
        Callback = function()
            local Http = game:GetService("HttpService")
            local servers = Http:JSONDecode(game:HttpGet(
                "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
            )).data
            local currentJobId = game.JobId
            
            for _, server in ipairs(servers) do
                if server.id ~= currentJobId and server.playing < server.maxPlayers then
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, server.id, player)
                    break
                end
            end
        end
    })

    -- ANTI-AFK
    ServerTab:CreateToggle({
        Name = "üö´ Ch·ªëng AFK",
        CurrentValue = false,
        Callback = function(state)
            if state then
                local vu = game:GetService("VirtualUser")
                player.Idled:Connect(function()
                    vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                    task.wait(1)
                    vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                end)
            end
        end
    })

    -- Th√¥ng b√°o UI ƒë√£ s·∫µn s√†ng
    Rayfield:Notify({
        Title = "‚úÖ KOIHXZ HUB ƒê√É S·∫¥N S√ÄNG",
        Content = "UI ƒë√£ ƒë∆∞·ª£c load th√†nh c√¥ng!",
        Duration = 5,
        Image = 7733925913
    })
end

-- FIXED: Kh·ªüi ch·∫°y ch√≠nh
task.spawn(function()
    -- Th√¥ng b√°o b·∫Øt ƒë·∫ßu
    SafeNotification("üöÄ KOIHXZ HUB", "ƒêang kh·ªüi ƒë·ªông...", 3)
    
    -- Kh·ªüi t·∫°o ESP
    for _, p in pairs(Players:GetPlayers()) do
        createESP(p)
    end
    Players.PlayerAdded:Connect(createESP)
    
    -- Kh·ªüi t·∫°o Hitbox
    RunService.RenderStepped:Connect(function()
        if _G.Disabled then
            for _, v in ipairs(Players:GetPlayers()) do
                updateHitbox(v)
            end
        end
        
        -- C·∫≠p nh·∫≠t t·ªëc ƒë·ªô
        local char = player.Character
        if char then
            local hum = char:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.WalkSpeed = SavedSpeed
                hum.JumpPower = SavedJump
            end
        end
    end)
    
    -- FIXED: Jump v√¥ h·∫°n
    UIS.JumpRequest:Connect(function()
        if _G.InfiniteJumpEnabled and player.Character then
            local hum = player.Character:FindFirstChildOfClass("Humanoid")
            if hum then
                hum:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
    
    -- FIXED: Teleport
    local function teleportTo(position)
        local char = player.Character
        if char then
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.CFrame = CFrame.new(position + Vector3.new(0, 3, 0))
            end
        end
    end

    UIS.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed or not teleportEnabled then return end
        
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local target = game:GetService("Workspace"):FindPartOnRay(Ray.new(
                game.Workspace.CurrentCamera.CFrame.Position,
                game.Workspace.CurrentCamera.CFrame.LookVector * 1000
            ))
            if target then
                teleportTo(target.Position)
            end
        end
    end)

    -- KH·ªûI T·∫†O UI SAU KHI M·ªåI TH·ª® ƒê√É S·∫¥N S√ÄNG
    task.wait(1) -- ƒê·∫£m b·∫£o m·ªçi th·ª© ƒë√£ load
    InitializeUI()
    
    -- Th√¥ng b√°o th√†nh c√¥ng
    SafeNotification("‚úÖ TH√ÄNH C√îNG", "UI ƒë√£ s·∫µn s√†ng! Nh·∫•n ph√≠m RightControl ƒë·ªÉ m·ªü", 5)
end)

-- Ph√≠m t·∫Øt m·ªü UI (RightControl)
UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightControl then
        if Window then
            Rayfield:Toggle()
        else
            -- N·∫øu UI ch∆∞a ƒë∆∞·ª£c t·∫°o, th·ª≠ t·∫°o l·∫°i
            InitializeUI()
        end
    end
end)